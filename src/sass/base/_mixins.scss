@use 'vars';
@use "sass:math";

/// Función para convertir "px" a "rem"
/// @author Ricardo Landínez
/// @param {String} $sizePixel - Medida en Pixeles a convertir(18px)
/// @param {String} $base-font-size - Tamaño de fuente base, por defecto 16px
/// @return {String} - string con la medida convertida a "rem"
@function pxTOem($sizePixel, $base-font-size:16px) {
	@if (unitless($sizePixel)) {
		$sizePixel: $sizePixel * 1px;
	}
	@if (unitless($base-font-size)) {
		$base-font-size: $base-font-size * 1px;
	}
	@return math.div($sizePixel, $base-font-size) + 0rem;
}

/// Ejemplo de uso
/// font-size: pxTOem(18px);
/// font-size: pxTOem(18);

/// Me guie de:
/// https://css-tricks.com/snippets/sass/px-to-em-functions/

// ==================== MEDIA QUERYS ====================
@mixin media-query($media-query) {
    @if $media-query==mobilex {
        @media only screen and (max-width: vars.$mobilex) {
            @content;
        }
    }
    @if $media-query==minmobilex {
        @media only screen and (min-width: vars.$mobilex) {
            @content;
        }
    }
    @if $media-query==mobilexl {
        @media only screen and (max-width: vars.$mobilexl) {
            @content;
        }
    }
    @if $media-query==minmobilexl {
        @media only screen and (min-width: vars.$mobilexl) {
            @content;
        }
    }
    @if $media-query==mobile {
        @media only screen and (max-width: vars.$mobile) {
            @content;
        }
    }
    @if $media-query==minmobile {
        @media only screen and (min-width: vars.$mobile) {
            @content;
        }
    }
    @if $media-query==tablet {
        @media only screen and (max-width: vars.$tablet) {
            @content;
        }
    }
    @if $media-query==mintablet {
        @media only screen and (min-width: vars.$tablet) {
            @content;
        }
    }
    @if $media-query==desktop {
        @media only screen and (max-width: vars.$desktop) {
            @content;
        }
    }
    @if $media-query==mindesktop {
        @media only screen and (min-width: vars.$desktop) {
            @content;
        }
    }
    @if $media-query==desktopL {
        @media only screen and (max-width: vars.$desktopL) {
            @content;
        }
    }
    @if $media-query==mindesktopL {
        @media only screen and (min-width: vars.$desktopL) {
            @content;
        }
    }
    @if $media-query==desktopXL {
        @media only screen and (max-width: vars.$desktopXL) {
            @content;
        }
    }
    @if $media-query==mindesktopXL {
        @media only screen and (min-width: vars.$desktopXL) {
            @content;
        }
    }
    @if $media-query==desktopXXL {
        @media only screen and (max-width: vars.$desktopXXL) {
            @content;
        }
    }
    @if $media-query==mindesktopXXL {
        @media only screen and (min-width: vars.$desktopXXL) {
            @content;
        }
    }
}
// Ejemplo de uso
/*
    @include media-query(mindesktop) {
        flex-direction: column;
    }
*/

// ==================== HACK CLEARFIX ====================
@mixin clearfix{
    &::after {
        content: "";
        clear: both;
        display: table;
    }
}

// ==================== RESPONSIVE FONT SIZE MIXIN ====================

// Sacado de: https://codepen.io/jakob-e/pen/yVyYzv

//  font-size 
@mixin font-size(
  $min,                         // font-size 
  $max: null,                   // optional maximum font size
  $font-lock-min:375px ,  // optional minimum viewport width 
  $font-lock-max:1400px   // optional maximum viewport width 
  ){
    $lock-min: $font-lock-min;
    $lock-max: $font-lock-max;
    & { font-size: $min; }
    @if $max {
      @media (min-width: $lock-min) and (max-width: $lock-max){ 
        & { 
          font-size: calc(
            #{$min} + 
            #{num($max) - num($min)} * 
            (100vw - #{$lock-min}) / 
            #{num($lock-max) - num($lock-min)}
          ); 
        } 
      }
      @media (min-width: $lock-max){ 
        & { font-size: $max; } 
      }
    }
}

/// Ejemplo de uso
/// @include font-size(13px, 20px, $mobilex, $desktopXL);

//  strip units helper function
@function num($input){  @return math.div($input, $input * 0 + 1); }